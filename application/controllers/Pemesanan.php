<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Pemesanan extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Pemesanan_model');
        $this->load->model('Paket_model');
    }

    /*
     * Listing of pemesanan
     */
    function index($id_paket)
    {
        $data['paket'] = $this->Paket_model->get_tanggal_keberangkatan_for_detail($id_paket);
        // $data['pemesanan'] = $this->Pemesanan_model->get_all_pemesanan($params);

        // echo '<pre>';
        // print_r($data['paket']);
        // exit();

        $this->session->unset_userdata(array(
            'nik',
            'nama_jamaah',
            'jenis_kelamin',
            'nomor_telepon',
            'alamat',
            'email',
            'pesan_apa',
            'berapa_orang'
        ));

        $data['_view'] = 'pemesanan/index';
        $this->load->view('layouts/main', $data);
    }

    function add()
    {
        $params = array(
            'nik' => $this->input->post('nik'),
            'nama_jamaah' => $this->input->post('nama_jamaah'),
            'jenis_kelamin' => $this->input->post('jenis_kelamin'),
            'nomor_telepon' => $this->input->post('nomor_telepon'),
            'alamat' => $this->input->post('alamat'),
            'email' => $this->input->post('email'),
            'pesan_apa' => $this->input->post('pesan_apa'),
            'berapa_orang' => $this->input->post('berapa_orang'),
        );

        // echo '<pre>';
        // print_r($params);
        // exit();

        $this->Pemesanan_model->add_pemesan($params);
        redirect(base_url());
    }

    function add_pemesan()
    {
        $this->session->unset_userdata(array(
            'uuid',
            'nik',
            'nama_jamaah',
            'jenis_kelamin',
            'nomor_telepon',
            'alamat',
            'email',
            'pesan_apa',
            'berapa_orang',
        ));

        $uuid_long = uniqid('', true);
        $uuid_short = substr(md5($uuid_long), 0, 8);

        $params = array(
            'uuid' => $uuid_short,
            'nik' => $this->input->post('nik'),
            'nama_pendaftar' => $this->input->post('nama_pendaftar'),
            'jenis_kelamin' => $this->input->post('jenis_kelamin'),
            'nomor_telepon' => $this->input->post('nomor_telepon'),
            'alamat' => $this->input->post('alamat'),
            'email' => $this->input->post('email'),
            'pesan_apa' => $this->input->post('pesan_apa'),
            'berapa_orang' => $this->input->post('berapa_orang'),
        );
        $this->session->set_userdata($params);
        // echo '<pre>';
        // print_r($params);
        // exit();
    }

    function confirmation()
    {
        // Load library CIQRCode
        $this->load->library('ciqrcode');

        // Path untuk menyimpan QR Code
        $qr_code_path = FCPATH . 'assets/images/qrcodependaftar/';

        // Generate UUID (Pendek)
        $uuid_long = uniqid('', true);
        $uuid = substr(md5($uuid_long), 0, 8);

        // Nama file QR Code
        $qr_code_file = $uuid . '.png';

        // Konfigurasi QR Code
        $config['cacheable'] = true; // Cacheable
        $config['cachedir'] = $qr_code_path; // Direktori cache
        $config['errorlog'] = $qr_code_path; // Direktori log error
        $config['imagedir'] = $qr_code_path; // Direktori penyimpanan gambar QR Code
        $config['quality'] = true; // Kualitas gambar PNG
        $config['size'] = 1024; // Ukuran gambar
        $config['black'] = array(0, 0, 0); // Warna hitam
        $config['white'] = array(255, 255, 255); // Warna putih
        $this->ciqrcode->initialize($config);

        // Data untuk QR Code
        $params['data'] = base_url() . 'pemesanan/pendaftar/' . $uuid; // Data QR Code
        $params['level'] = 'H'; // Level QR Code (L, M, Q, H)
        $params['size'] = 10; // Ukuran QR Code
        $params['savename'] = $qr_code_path . $qr_code_file; // Nama file QR Code
        $this->ciqrcode->generate($params); // Generate QR Code

        // Ambil data input dari formulir
        $data_input = array(
            'uuid' => $uuid,
            'nik' => $this->input->post('nik'),
            'nama_pendaftar' => $this->input->post('nama_pendaftar'),
            'jenis_kelamin' => $this->input->post('jenis_kelamin'),
            'nomor_telepon' => $this->input->post('nomor_telepon'),
            'alamat' => $this->input->post('alamat'),
            'email' => $this->input->post('email'),
            'pesan_apa' => $this->input->post('pesan_apa'),
            'berapa_orang' => $this->input->post('berapa_orang'),
            'qr_code' => base_url('assets/images/qrcodependaftar/' . $qr_code_file),
        );

        // Validasi input
        foreach ($data_input as $key => $value) {
            if (empty($value)) {
                $this->session->set_flashdata('error', 'Data ' . $key . ' tidak boleh kosong.');
                redirect('pemesanan/form'); // Ganti dengan halaman form Anda
            }
        }

        // Simpan ke database
        $this->Pemesanan_model->add_pemesan($data_input);

        // Load view konfirmasi
        $data['_view'] = 'pemesanan/confirmation';
        $data['registration_data'] = $data_input; // Data yang ditampilkan di halaman konfirmasi
        $this->load->view('layouts/main', $data);
    }


    function pendaftar($uuid)
    {
        $data['pendaftar'] = $this->Pemesanan_model->get_pemesanan_uuid($uuid);

        $data['_view'] = 'pemesanan/pendaftar';
        $this->load->view('layouts/main', $data);
    }

    /*
    * Adding a new pemesanan
    */

    function view($id_pemesanan)
    {
        $data['pemesanan'] = $this->Pemesanan_model->get_pemesanan($id_pemesanan); // Call a method from your model to get data from the database
        $data['pemesananlain'] = $this->Pemesanan_model->get_all_pemesanan();
        // echo json_encode($data);
        // echo "<pre>";
        // print_r($data);
        $data['_view'] = 'pemesanan/view';
        $this->load->view('layouts/main', $data);
    }

    function get()
    {
        $result = $this->Paket_model->get_pemesanan_rosana_only_api();

        // Menyusun data untuk respons JSON
        $response = array(
            'status' => '200',
            'message' => 'Data retrieved successfully',
            'data' => json_decode($result, true) // Decode JSON menjadi array
        );

        // Menyusun respons dalam format JSON
        $this->output
            ->set_content_type('application/json')
            ->set_output(json_encode($response));
    }

    function get_detail_pemesanan($id)
    {
        $result = $this->Paket_model->get_pemesanan_api($id);

        if ($result) {
            // Menyusun data untuk respons JSON
            $response = array(
                'status' => '200',
                'message' => 'Data retrieved successfully',
                'data' => json_decode($result, true) // Decode JSON menjadi array
            );

            // Menyusun respons dalam format JSON
            $this->output
                ->set_content_type('application/json')
                ->set_output(json_encode($response));
        } else {
            // Jika data tidak ditemukan
            $response = array(
                'status' => 'error',
                'message' => 'Data not found'
            );

            $this->output
                ->set_content_type('application/json')
                ->set_output(json_encode($response));
        }
    }


    /*
     * Deleting pemesanan
     */
    function remove($id_pemesanan)
    {
        $pemesanan = $this->Pemesanan_model->get_pemesanan($id_pemesanan);

        $this->Pemesanan_model->delete_pemesanan($id_pemesanan);
        unlink(FCPATH . 'assets/images/pemesanan/' . $pemesanan['pemesanan_img']);
        redirect('pemesanan/index');
    }
}