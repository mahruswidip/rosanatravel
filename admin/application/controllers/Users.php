<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Users extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Users_model');
    }

    /*
     * Listing of petani
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE;
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;

        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('users/index?');
        $config['total_rows'] = $this->Users_model->get_all_users_count();
        $this->pagination->initialize($config);

        $data['users'] = $this->Users_model->get_all_users($params);

        $data['_view'] = 'users/index';
        $this->load->view('layouts/main', $data);
    }

    function edit($user_id)
    {
        // check if the petani exists before trying to edit it
        $data['users'] = $this->Users_model->get_users($user_id);

        if (isset($data['users']['user_id'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'user_name' => $this->input->post('user_name'),
                    'user_level' => $this->input->post('user_level'),
                );

                $this->Users_model->update_users($user_id, $params);
                redirect('users/index');
            } else {
                $data['_view'] = 'users/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The users you are trying to edit does not exist.');
    }

    function add()
    {
        $user_id = $this->session->userdata('user_id');
        $this->db->select_max('id_petani');
        $query  = $this->db->get('petani')->row_array();
        $get_angka = $query['id_petani'] + 1;
        $get_id = $this->input->post('user_id');
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
                'jenis_kelamin' => $this->input->post('jenis_kelamin'),
                'nama_petani' => $this->input->post('nama_petani'),
                'tanggal_lahir' => $this->input->post('tanggal_lahir'),
                'pendidikan_terakhir' => $this->input->post('pendidikan_terakhir'),
                'nik' => $this->input->post('nik'),
                'nomor_hp' => $this->input->post('nomor_hp'),
                'alamat' => $this->input->post('alamat'),
                'is_akun' => '1',
                'id_petani' => $get_angka,
            );

            $this->Users_model->add_users($params);
            $params2 = array(
                'id_petani' => $get_angka,
                'created_by' => $user_id,
            );
            $this->Users_model->update_users($get_id, $params2);
            redirect('users/index');
        } else {
            $data['_view'] = 'users/add';
            $this->load->view('layouts/main', $data);
        }
    }

    function buatakun()
    {
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
                'nik' => $this->input->post('nik'),
                'nomor_hp' => $this->input->post('nomor_hp'),
                'alamat' => $this->input->post('alamat'),
                'is_akun' => '0',
            );

            $petani_id = $this->Users_model->register($params);
            redirect('users/buatakun');
        } else {
            $data['_view'] = 'users/buatakun';
            $this->load->view('layouts/main', $data);
        }
    }

    public function proses()
    {
        $this->form_validation->set_rules('user_name', 'user_name', 'trim|required|min_length[1]|max_length[255]');
        $this->form_validation->set_rules('user_password', 'user_password', 'trim|required|min_length[1]|max_length[255]');
        $this->form_validation->set_rules('user_email', 'user_email', 'trim|required|min_length[1]|max_length[255]|is_unique[tbl_users.user_email]');
        if ($this->form_validation->run() == true) {
            $user_name = $this->input->post('user_name');
            $user_email = $this->input->post('user_email');
            $user_password = md5($this->input->post('user_password'));
            $created_by = '1';

            $this->Users_model->register($user_name, $user_email, $user_password, $created_by);
            $this->session->set_flashdata('success_register', 'Proses Pendaftaran User Berhasil');
            redirect('users/index');
        } else {
            $this->session->set_flashdata('error', 'Proses Tidak Berhasil. Pastikan Username anda tidak sama dengan yang sudah ada');
            redirect('users/buatakun');
        }
    }

    function remove($user_id)
    {
        $users = $this->Users_model->get_users($user_id);

        // check if the users exists before trying to delete it
        if (isset($users['user_id'])) {
            $this->Users_model->delete_users($user_id);
            redirect('users/index');
        } else
            show_error('The petani you are trying to delete does not exist.');
    }
}
